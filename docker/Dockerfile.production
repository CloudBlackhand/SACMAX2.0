# Multi-stage build otimizado para produção
FROM node:20-slim

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    python3 \
    python3-pip \
    python3-venv \
    build-essential \
    libpq-dev \
    && wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copiar apenas arquivos necessários primeiro
COPY package*.json ./
COPY python_modules/requirements.txt ./python_modules/

# Instalar dependências Node.js
RUN npm ci --only=production --no-audit --no-fund

# Criar ambiente virtual Python e instalar dependências
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install --no-cache-dir -r python_modules/requirements.txt

# Copiar código fonte
COPY . .

# Criar diretórios necessários
RUN mkdir -p uploads logs config temp_data

# Criar usuário não-root
RUN groupadd -r nodejs && useradd -r -g nodejs nodejs && \
    chown -R nodejs:nodejs /app

USER nodejs

EXPOSE 3000

ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=3000
ENV PYTHON_PATH=/opt/venv/bin/python

CMD ["npm", "start"]