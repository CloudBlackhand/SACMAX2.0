#!/usr/bin/env node

const PythonDatabaseService = require('./backend/services/pythonDatabaseService');
const logger = require('./backend/utils/logger');

async function testPythonIntegration() {
    console.log('üêç Testando integra√ß√£o Python com banco de dados...\n');

    const pythonService = new PythonDatabaseService();

    try {
        // 1. Testar disponibilidade do servi√ßo Python
        console.log('üìã 1. Verificando disponibilidade do servi√ßo Python...');
        const isAvailable = await pythonService.isAvailable();
        console.log(`   ${isAvailable ? '‚úÖ' : '‚ùå'} Servi√ßo Python: ${isAvailable ? 'Dispon√≠vel' : 'Indispon√≠vel'}`);

        if (!isAvailable) {
            console.log('   üí° Instale as depend√™ncias Python: pip install -r python_modules/requirements.txt');
            return;
        }

        // 2. Testar configura√ß√£o do banco
        console.log('\nüóÑÔ∏è 2. Configurando banco de dados...');
        const setupResult = await pythonService.setupDatabase();
        console.log(`   ${setupResult.success ? '‚úÖ' : '‚ùå'} Configura√ß√£o: ${setupResult.success ? 'Sucesso' : 'Falha'}`);

        // 3. Testar classifica√ß√£o de feedback
        console.log('\nüìù 3. Testando classifica√ß√£o de feedback...');
        const testTexts = [
            'Excelente atendimento, muito satisfeito!',
            'P√©ssimo servi√ßo, n√£o recomendo.',
            'O produto √© bom, mas poderia melhorar.'
        ];

        for (const text of testTexts) {
            const result = await pythonService.classifyFeedback(text);
            console.log(`   üìÑ "${text.substring(0, 30)}..."`);
            console.log(`      Sentimento: ${result.sentiment} (${(result.confidence * 100).toFixed(1)}%)`);
        }

        // 4. Testar dados de exemplo
        console.log('\nüìä 4. Testando salvamento de dados...');
        const sampleData = {
            contacts: [
                {
                    client_id: 'TEST001',
                    client_name: 'Jo√£o Silva',
                    phone: '11999999999',
                    sheet_name: 'Teste'
                },
                {
                    client_id: 'TEST002',
                    client_name: 'Maria Santos',
                    phone: '11888888888',
                    sheet_name: 'Teste'
                }
            ]
        };

        const saveResult = await pythonService.saveSpreadsheetData(sampleData, 'teste.xlsx', 'contacts');
        console.log(`   ${saveResult.total_records > 0 ? '‚úÖ' : '‚ùå'} Dados salvos: ${saveResult.total_records} registros`);

        // 5. Testar listagem de clientes
        console.log('\nüë• 5. Testando listagem de clientes...');
        const clients = await pythonService.getAllClients();
        console.log(`   ${clients.length > 0 ? '‚úÖ' : '‚ùå'} Clientes encontrados: ${clients.length}`);

        if (clients.length > 0) {
            console.log('   üìã Primeiros clientes:');
            clients.slice(0, 3).forEach((client, index) => {
                console.log(`      ${index + 1}. ${client.client_name} (${client.client_id})`);
            });
        }

        // 6. Testar hist√≥rico de uploads
        console.log('\nüìà 6. Testando hist√≥rico de uploads...');
        const history = await pythonService.getUploadHistory();
        console.log(`   ${history.length > 0 ? '‚úÖ' : '‚ùå'} Uploads no hist√≥rico: ${history.length}`);

        console.log('\nüéâ Teste de integra√ß√£o Python conclu√≠do com sucesso!');
        console.log('\nüìã Resumo:');
        console.log(`   ‚Ä¢ Servi√ßo Python: ${isAvailable ? '‚úÖ Funcionando' : '‚ùå Problema'}`);
        console.log(`   ‚Ä¢ Banco de dados: ${setupResult.success ? '‚úÖ Configurado' : '‚ùå Erro'}`);
        console.log(`   ‚Ä¢ Classifica√ß√£o: ‚úÖ Funcionando`);
        console.log(`   ‚Ä¢ Salvamento: ${saveResult.total_records > 0 ? '‚úÖ Funcionando' : '‚ùå Erro'}`);
        console.log(`   ‚Ä¢ Listagem: ${clients.length > 0 ? '‚úÖ Funcionando' : '‚ùå Erro'}`);

    } catch (error) {
        console.error('‚ùå Erro durante teste:', error.message);
        console.log('\nüîß Solu√ß√£o de problemas:');
        console.log('1. Verifique se Python 3 est√° instalado');
        console.log('2. Instale as depend√™ncias: pip install -r python_modules/requirements.txt');
        console.log('3. Verifique se DATABASE_URL est√° configurada');
        console.log('4. Verifique se o banco PostgreSQL est√° acess√≠vel');
    }
}

// Executar teste
testPythonIntegration();
